"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DiscordJS = void 0;
const Connector_1 = require("../Connector");
class DiscordJS extends Connector_1.Connector {
    // sendPacket is where your library send packets to Discord Gateway
    sendPacket(shardId, payload, important) {
        return this.client.ws.shards.get(shardId)?.send(payload, important);
    }
    // getId is a getter where the lib stores the client user (the one logged in as a bot) id
    getId() {
        return this.client.user.id;
    }
    // Listen attaches the event listener to the library you are using
    listen(nodes) {
        // Only attach to ready event once, refer to your library for its ready event
        this.client.once('ready', () => this.ready(nodes));
        // Attach to the raw websocket event, this event must be 1:1 on spec with dapi (most libs implement this)
        this.client.on('raw', (packet) => this.raw(packet));
    }
}
exports.DiscordJS = DiscordJS;
//# sourceMappingURL=DiscordJS.js.map